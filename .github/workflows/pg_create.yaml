name: "Create Azure PostgreSQL Server"
on:
  workflow_dispatch:

  push:
    branches:
      - main
      - create_pipline
permissions:
  id-token: write
  contents: read
jobs:
  create_postgres_server:
    name: Deploy resources for restapi
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - name: Create Key Vault
        run: |
          echo "Checking if Key Vault exists..."
          if az keyvault show --name ${{ vars.AZURE_KEY_VAULT_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}; then
            echo "Key Vault already exists."
          else
            echo "Creating Key Vault..."
            az keyvault create \
              --name ${{ vars.AZURE_KEY_VAULT_NAME }} \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --location ${{ vars.AZURE_LOCATION }}
          fi
          group_id=$( az ad group show --group ${{ vars.DEVELOPER_GROUP_NAME }} --query objectId --output tsv)

          az role assignment create \
            --assignee-object-id $group_id \
            --assignee-principal-type Group \
            --role "Key Vault Secrets Officer" \
            --scope "/subscriptions/${{ vars.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.AZURE_RESOURCE_GROUP }}/providers/Microsoft.KeyVault/vaults/${{ vars.AZURE_KEY_VAULT_NAME }}"

      - name: Create PostgreSQL Server
        run: |
          IP=$(curl -s https://ifconfig.me)
          echo "Runner Public IP: $IP"
          if az postgres flexible-server show --name ${{ vars.AZURE_POSTGRESQL_SERVER_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}; then
            echo "PostgreSQL server already exists."
          else
            echo "Creating PostgreSQL server..."
            az postgres flexible-server create \
              --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
              --name ${{ vars.AZURE_POSTGRESQL_SERVER_NAME }} \
              --location ${{ vars.AZURE_LOCATION }} \
              --admin-user ${{ secrets.AZURE_POSTGRESQL_ADMIN_USER }} \
              --admin-password ${{ secrets.AZURE_POSTGRESQL_ADMIN_PASSWORD }} \
              --tier Burstable \
              --sku-name Standard_B1ms \
              --version 16 \
              --public-access $IP
            fi
